// media queries for retina

@mixin mqr($mq) {

    // @if $mq == 690  { @media (max-width: 690px)  { @content; } }
    // @if $mq == 320  { @media (max-width: 320px)  { @content; } }

    @if $mq == retina {
        @media
          only screen and (-webkit-min-device-pixel-ratio: 2),
          only screen and (   min--moz-device-pixel-ratio: 2),
          only screen and (     -o-min-device-pixel-ratio: 2/1),
          only screen and (        min-device-pixel-ratio: 2),
          only screen and (                min-resolution: 192dpi),
          only screen and (                min-resolution: 2dppx) {
            @content;
        }
    }
}

// mixin for media queries
@mixin mq($min) {
    @media only screen and (min-width : $min) { @content; }
}

@mixin mqm($max) {
    @media only screen and (max-width : $max) { @content; }
}

@mixin mqmm($min,$max) {
    @media only screen and (min-width : $min) and (max-width : $max) { @content; }
}

/* Simple SCSS mixin to create CSS triangles */
/* Example: @include css-triangle ("up", 10px, #fff); */

@mixin css-triangle ($direction: "down", $size: 20px, $color: #000) {
    width: 0;
    height: 0;
    border-left: $size solid #{setTriangleColor($direction, "left", $color)};
    border-right: $size solid #{setTriangleColor($direction, "right", $color)};
    border-bottom: $size solid #{setTriangleColor($direction, "bottom", $color)};
    border-top: $size solid #{setTriangleColor($direction, "top", $color)};
}

/* Utility function to return the relevant colour depending on what type of arrow it is */

@function setTriangleColor($direction, $side, $color) {

    @if $direction == "left" and $side == "right"
    or  $direction == "right" and $side == "left"
    or $direction == "down" and $side == "top"
    or $direction == "up" and $side == "bottom" {
        @return $color
    } @else {
        @return "transparent";
    }

}

// https://dvcs.w3.org/hg/FXTF/raw-file/tip/filters/index.html
//
// grayscale      ex: filter: grayscale(100%);
// sepia          ex: filter: sepia(100%);
// saturate       ex: filter: saturate(0%);
// hue-rotate     ex: filter: hue-rotate(45deg);
// invert         ex: filter: invert(100%);
// brightness     ex: filter: brightness(15%);
// contrast       ex: filter: contrast(200%);
// blur           ex: filter: blur(2px);

@mixin filter($filter-type,$filter-amount) {
    -webkit-filter: $filter-type+unquote('(#{$filter-amount})');
    -moz-filter: $filter-type+unquote('(#{$filter-amount})');
    -ms-filter: $filter-type+unquote('(#{$filter-amount})');
    -o-filter: $filter-type+unquote('(#{$filter-amount})');
    filter: $filter-type+unquote('(#{$filter-amount})');
}

// example usage

// img {
//     @include filter(grayscale, 100%);
// }

// example output

// img {
//     -webkit-filter: grayscale(100%);
//     -moz-filter: greyacale(100%);
//     -ms-filter: grayscale(100%);
//     -o-filter: grayscale(100%);
//     filter: grayscale(100%);
// }

/* utility classes */

.cfix {
    &:before,
    &:after {
        content:"";
        display: table;
    }
    &:after {
        clear:both;
    }
    & {
        *zoom:1;
    }
}

%cfix {
    &:before,
    &:after {
        content:"";
        display: table;
    }
    &:after {
        clear:both;
    }
    & {
        *zoom:1;
    }
}

%vert-trans-align {
    position: relative;
    top: 50%;
    -webkit-transform: translateY(-50%);
    -ms-transform: translateY(-50%);
    transform: translateY(-50%);
}

.vert-trans-align {
    position: relative;
    top: 50%;
    -webkit-transform: translateY(-50%);
    -ms-transform: translateY(-50%);
    transform: translateY(-50%);
}

%vert-align-wrap {
    display: table;
}

.vert-align-wrap {
    display: table;
}

%vert-align-content {
    display: table-cell;
    vertical-align: middle;
}

.vert-align-content {
    display: table-cell;
    vertical-align: middle;
}

%bbox, %bbox:after, %bbox:before {
    -webkit-box-sizing: border-box;
       -moz-box-sizing: border-box;
            box-sizing: border-box;
}

%no-select {
    -webkit-touch-callout: none;
    -khtml-user-select: none;
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
}
